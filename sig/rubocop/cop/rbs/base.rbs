use ::RBS::AST::Declarations as Decl

module RuboCop
  module Cop
    module RBS
      # Base class for cops that operate on RBS signatures.
      class Base < ::RuboCop::Cop::Base
        def processed_rbs_source: () -> RuboCop::RBS::ProcessedRBSSource
        def investigation_rbs: () -> void
        def on_rbs_new_investigation: () -> void
        def on_rbs_parsing_error: () -> void

        def on_rbs_class: (Decl::Class) -> void
        def on_rbs_module: (Decl::Module) -> void
        def on_rbs_interface: (Decl::Interface) -> void
        def on_rbs_constant: (Decl::Constant) -> void
        def on_rbs_global: (Decl::Global) -> void
        def on_rbs_type_alias: (Decl::TypeAlias) -> void
        def on_rbs_def: (::RBS::AST::Members::MethodDefinition) -> void
        def on_rbs_attribute: (::RBS::AST::Members::Attribute) -> void

        def walk: (untyped) -> void
        def rbs_buffer: () -> ::RBS::Buffer
        def location_to_range: (::RBS::Location[untyped, untyped]) -> Parser::Source::Range
        def range_between: (Integer, Integer) -> Parser::Source::Range
      end
    end
  end
end
