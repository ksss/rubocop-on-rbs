# Generated from lib/rbs/inline/ast/comment_lines.rb with RBS::Inline

module RBS
  module Inline
    module AST
      # CommentLines represents consecutive comments, providing a mapping from locations in `#string` to a pair of a comment and its offset
      #
      # The comments construct one String.
      #
      # ```ruby
      # # Hello       <-- Comment1
      # # World       <-- Comment2
      # ```
      #
      # We want to get a String of comment1 and comment2, `"Hello\nWorld".
      # And want to translate a location in the string into the location in comment1 and comment2.
      class CommentLines
        attr_reader comments: Array[Prism::Comment]

        # @rbs comments: Array[Prism::Comment]
        def initialize: (Array[Prism::Comment] comments) -> void

        def lines: () -> Array[String]

        def string: () -> String

        # Translates the cursor index of `#string` into the cursor index of a specific comment object
        #
        # @rbs index: Integer
        # @rbs return: [Prism::Comment, Integer]?
        def comment_location: (Integer index) -> [ Prism::Comment, Integer ]?
      end
    end
  end
end
